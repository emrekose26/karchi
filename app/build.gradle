apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def libs = rootProject.ext.libraries
def config = rootProject.ext.configuration

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.package
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${libs.kotlin}"
    implementation "com.android.support:appcompat-v7:${libs.support}"
    implementation "com.android.support:design:${libs.support}"
    implementation "com.android.support:recyclerview-v7:${libs.support}"
    implementation "com.android.support:cardview-v7:${libs.support}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Architecture Components
    implementation "android.arch.lifecycle:runtime:${libs.archRuntime}"
    implementation "android.arch.lifecycle:extensions:${libs.arch}"
    implementation "android.arch.persistence.room:runtime:${libs.arch}"
    implementation "android.arch.persistence.room:rxjava2:${libs.arch}"
    kapt "android.arch.persistence.room:compiler:${libs.arch}"
    kapt "android.arch.lifecycle:compiler:${libs.arch}"

    // RxJava & RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:${libs.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${libs.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${libs.retrofit}"

    // Gson
    implementation "com.google.code.gson:gson:${libs.gson}"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:${libs.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libs.loggingInterceptor}"

    // Dagger
    implementation "com.google.dagger:dagger:${libs.dagger}"
    implementation "com.google.dagger:dagger-android:${libs.dagger}"
    implementation "com.google.dagger:dagger-android-support:${libs.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libs.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${libs.dagger}"

    // Stetho
    implementation "com.facebook.stetho:stetho:${libs.stetho}"
    implementation "com.facebook.stetho:stetho-okhttp3:${libs.stetho}"

    // Picasso
    implementation "com.squareup.picasso:picasso:${libs.picasso}"

    // Circle ImageView
    implementation "de.hdodenhof:circleimageview:${libs.circleImg}"

    // Data Binding
    kapt "com.android.databinding:compiler:${libs.dataBinding}"

    // Leak Canary
    debugCompile "com.squareup.leakcanary:leakcanary-android:${libs.leakCanary}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakCanary}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
